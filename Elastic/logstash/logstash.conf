input {
   elasticsearch {
     hosts => "https://10.111.0.121:9200"
     index => ".ds-heartbeat-*"
     query => '{ "query": {"match": {"monitor.status": "down"} }, "sort": [ {"@timestamp": {"order": "desc"} } ] }'
     ca_file => "/root/certs/ca/ca.crt"
     user => "elastic"
     password => "999oPveK9C6U7KeJ66e9H2hA"
     ssl => true
   }
}

filter {
  mutate {
    add_field =>{
      "date" => "%{@timestamp}"
    }
  }

  mutate {
    gsub => ["date", "Z", ""]  # Remove "Z" from the end of the timestamp
  }

  date {
    match => ["date", "yyyy-MM-dd'T'HH:mm:ss"]
    timezone => "Asia/Bangkok"
    target => "date"
  }

  ruby {
    code => '
      t1 = event.get("@timestamp").to_f
      offset = 7 * 3600
      event.set("NewTimestamp", LogStash::Timestamp.new(Time.at(t1 + offset)))
    '
  }
}

output {
  stdout { codec => rubydebug }
}

output {
   email {
    to => "sahatasnutlee@gmail.com"
    from => "sahatasnutlee@gmail.com"
    address => "smtp.gmail.com"
    subject => "Test Heartbeat Uptime"
    body => "Alert Details:

    Timestamp: %{[NewTimestamp]}
    Name: %{[agent][name]}
    Hostname: %{[agent][hostname]}
    Agent ID: %{[agent][id]}
    Agent Version: %{[agent][version]}
    Error Code: %{[error][code]}
    Error Message: %{[error][message]}
    Event Type: %{[event][type]}
    Monitor Name: %{[monitor][name]}
    Monitor Status: %{[monitor][status]}

    Additional Information:

    Monitor Type: %{[monitor][type]}
    Resolve IP: %{[resolve][ip]}
    State Checks: %{[state][checks]}
    State Down: %{[state][down]}
    State Duration (ms): %{[state][duration_ms]}
    State Started At: %{[state][started_at]}
    State Status: %{[state][status]}

    URL Full: %{[url][full]}
    URL Domain: %{[url][domain]}
    URL Port: %{[url][port]}
    URL Scheme: %{[url][scheme]}
    "
    port => "587"
    username => "sahatasnutlee@gmail.com"
    password => "lzlw xror atgu kqxg"
    use_tls => true
  }
}