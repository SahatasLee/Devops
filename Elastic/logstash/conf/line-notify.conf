input {
   elasticsearch {
     hosts => "https://10.111.0.121:9200"
     index => ".ds-heartbeat-*"
     query => '{
                  "query": {
                      "bool": {
                          "must": {
                              "match": {
                                  "monitor.status": "down"
                              }
                          },
                          "filter": {
                              "range": {
                                  "@timestamp": {
                                      "gte": "now-30s"
                                  }
                              }
                          }
                      }
                  },
                  "sort": [
                      {
                          "@timestamp": {
                              "order": "desc"
                          }
                      }
                  ]
                }'
     ca_file => "/root/certs/ca/ca.crt"
     user => "elastic"
     password => "999oPveK9C6U7KeJ66e9H2hA"
     ssl => true
   }
}

filter {
  ruby {
    path => "/etc/logstash/line-notify.rb"
  }
}

output {
  stdout { codec => rubydebug }
}

output {
  http {
    url => "https://notify-api.line.me/api/notify"
    http_method => "post"
    headers => {
      "Authorization" => "Bearer "
    }
    content_type => "application/x-www-form-urlencoded"
    format => "form"
    mapping => {
    "message" => "Hello from logstash 
    
    Alert Details:

    Time: %{[custom_timestamp]}
    Timestamp: %{[@timestamp]}
    Hostname: %{[agent][name]}
    Agent ID: %{[agent][id]}
    Agent Version: %{[agent][version]}
    Error Code: %{[error][code]}
    Error Message: %{[error][message]}
    Event Type: %{[event][type]}
    Monitor Name: %{[monitor][name]}
    Monitor Id: %{[monitor][id]}
    Monitor Status: %{[monitor][status]}

    Additional Information:

    Monitor Type: %{[monitor][type]}
    Resolve IP: %{[resolve][ip]}
    State Checks: %{[state][checks]}
    State Down: %{[state][down]}
    State Duration (ms): %{[state][duration_ms]}
    State Started At: %{[state][started_at]}
    State Status: %{[state][status]}

    URL Full: %{[url][full]}
    URL Domain: %{[url][domain]}
    URL Port: %{[url][port]}
    URL Scheme: %{[url][scheme]}
    "
    }
  }
}

output {
  http {
    url => "http://10.111.0.112:8000/"
    http_method => "post"
    headers => {
      "Authorization" => "Bearer b1k7RshlkYsKdjOUtMCLGhx4HiGLFbZB2LbNsajdCc5"
      "Content-Type" => "application/json"
    }
    body => "Hello from Logstash"
    body_format => "text"
    target_body => "http_response"
  }