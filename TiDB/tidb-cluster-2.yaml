apiVersion: pingcap.com/v1alpha1
kind: TidbCluster
metadata:
  name: basic
  namespace: tidb-cluster
spec:
  version: v6.1.0
  timezone: Asia/Bangkok
  pvReclaimPolicy: Retain
  enableDynamicConfiguration: true
  configUpdateStrategy: RollingUpdate
  discovery: {}
  helper:
    image: alpine:3.16.0
  pd:
    baseImage: pingcap/pd
    maxFailoverCount: 0
    replicas: 3
    # if storageClassName is not set, the default Storage Class of the Kubernetes cluster will be used
    enableDashboardInternalProxy: true
    #limits:
      #cpu: "8"
      #memory: "16Gi"
    requests:
      cpu: "4"
      memory: "4Gi"
      storage: "5Gi"
    storageClassName: nfs #please change to match sc name
    service:
      type: LoadBalancer
    affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - pd
                topologyKey: "kubernetes.io/hostname"
    config: {}
  tikv:
    baseImage: pingcap/tikv
    maxFailoverCount: 0
    # If only 1 TiKV is deployed, the TiKV region leader 
    # cannot be transferred during upgrade, so we have
    # to configure a short timeout
    evictLeaderTimeout: 1m
    replicas: 3
    # if storageClassName is not set, the default Storage Class of the Kubernetes cluster will be used
    #limits:
      #cpu: "16"
      #memory: "64Gi"
    requests:
      cpu: "4"
      memory: "4Gi"
      storage: "8Gi"
    storageClassName: nfs #please change to match sc name
    config:
      storage:
        # In basic examples, we set this to avoid using too much storage.
        reserve-space: "0MB"
      rocksdb:
        # In basic examples, we set this to avoid the following error in some Kubernetes clusters:
        # "the maximum number of open file descriptors is too small, got 1024, expect greater or equal to 82920"
        max-open-files: 256
      raftdb:
        max-open-files: 256
    affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - tikv
                topologyKey: "kubernetes.io/hostname"
  tidb:
    baseImage: pingcap/tidb
    maxFailoverCount: 0
    replicas: 3
    limits:
      #cpu: "16"
      #memory: "48Gi"
    requests:
      cpu: "4"
      memory: "4Gi" 
    service:
      type: LoadBalancer
    affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - tidb
                topologyKey: "kubernetes.io/hostname"
    config: {}
  tiflash:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - tiflash
          topologyKey: kubernetes.io/hostname
    baseImage: pingcap/tiflash
    maxFailoverCount: 0
    replicas: 3
    limits:
      #cpu: "48"
      #memory: "128Gi"
    requests:
      cpu: "4"
      memory: "4Gi"
    storageClaims:
    - resources:
        requests:
          storage: 5Gi
      storageClassName: nfs #please change to match sc name
    config: {}